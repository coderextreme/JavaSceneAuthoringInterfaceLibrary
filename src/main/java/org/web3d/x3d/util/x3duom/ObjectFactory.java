//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.01.13 at 10:04:16 AM CST 
//


package org.web3d.x3d.util.x3duom;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.web3d.x3d.util.x3duom package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _AllowedElement_QNAME = new QName("", "allowedElement");
    private final static QName _SourceText_QNAME = new QName("", "SourceText");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.web3d.x3d.util.x3duom
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AbstractNodeType }
     * 
     */
    public AbstractNodeType createAbstractNodeType() {
        return new AbstractNodeType();
    }

    /**
     * Create an instance of {@link InterfaceDefinition }
     * 
     */
    public InterfaceDefinition createInterfaceDefinition() {
        return new InterfaceDefinition();
    }

    /**
     * Create an instance of {@link ComponentInfo }
     * 
     */
    public ComponentInfo createComponentInfo() {
        return new ComponentInfo();
    }

    /**
     * Create an instance of {@link Inheritance }
     * 
     */
    public Inheritance createInheritance() {
        return new Inheritance();
    }

    /**
     * Create an instance of {@link AdditionalInheritance }
     * 
     */
    public AdditionalInheritance createAdditionalInheritance() {
        return new AdditionalInheritance();
    }

    /**
     * Create an instance of {@link Field }
     * 
     */
    public Field createField() {
        return new Field();
    }

    /**
     * Create an instance of {@link Enumeration }
     * 
     */
    public Enumeration createEnumeration() {
        return new Enumeration();
    }

    /**
     * Create an instance of {@link ContainerField }
     * 
     */
    public ContainerField createContainerField() {
        return new ContainerField();
    }

    /**
     * Create an instance of {@link ContentModel }
     * 
     */
    public ContentModel createContentModel() {
        return new ContentModel();
    }

    /**
     * Create an instance of {@link FieldDeclaration }
     * 
     */
    public FieldDeclaration createFieldDeclaration() {
        return new FieldDeclaration();
    }

    /**
     * Create an instance of {@link GroupContentModel }
     * 
     */
    public GroupContentModel createGroupContentModel() {
        return new GroupContentModel();
    }

    /**
     * Create an instance of {@link NodeContentModel }
     * 
     */
    public NodeContentModel createNodeContentModel() {
        return new NodeContentModel();
    }

    /**
     * Create an instance of {@link StatementContentModel }
     * 
     */
    public StatementContentModel createStatementContentModel() {
        return new StatementContentModel();
    }

    /**
     * Create an instance of {@link AbstractNodeTypes }
     * 
     */
    public AbstractNodeTypes createAbstractNodeTypes() {
        return new AbstractNodeTypes();
    }

    /**
     * Create an instance of {@link AbstractObjectType }
     * 
     */
    public AbstractObjectType createAbstractObjectType() {
        return new AbstractObjectType();
    }

    /**
     * Create an instance of {@link AbstractObjectTypes }
     * 
     */
    public AbstractObjectTypes createAbstractObjectTypes() {
        return new AbstractObjectTypes();
    }

    /**
     * Create an instance of {@link ConcreteNode }
     * 
     */
    public ConcreteNode createConcreteNode() {
        return new ConcreteNode();
    }

    /**
     * Create an instance of {@link ConcreteNodes }
     * 
     */
    public ConcreteNodes createConcreteNodes() {
        return new ConcreteNodes();
    }

    /**
     * Create an instance of {@link FieldType }
     * 
     */
    public FieldType createFieldType() {
        return new FieldType();
    }

    /**
     * Create an instance of {@link FieldTypes }
     * 
     */
    public FieldTypes createFieldTypes() {
        return new FieldTypes();
    }

    /**
     * Create an instance of {@link SimpleType }
     * 
     */
    public SimpleType createSimpleType() {
        return new SimpleType();
    }

    /**
     * Create an instance of {@link SimpleTypeEnumerations }
     * 
     */
    public SimpleTypeEnumerations createSimpleTypeEnumerations() {
        return new SimpleTypeEnumerations();
    }

    /**
     * Create an instance of {@link Statement }
     * 
     */
    public Statement createStatement() {
        return new Statement();
    }

    /**
     * Create an instance of {@link Statements }
     * 
     */
    public Statements createStatements() {
        return new Statements();
    }

    /**
     * Create an instance of {@link X3DUnifiedObjectModel }
     * 
     */
    public X3DUnifiedObjectModel createX3DUnifiedObjectModel() {
        return new X3DUnifiedObjectModel();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Object }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "allowedElement")
    public JAXBElement<Object> createAllowedElement(Object value) {
        return new JAXBElement<Object>(_AllowedElement_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link Object }{@code >}
     */
    @XmlElementDecl(namespace = "", name = "SourceText")
    public JAXBElement<Object> createSourceText(Object value) {
        return new JAXBElement<Object>(_SourceText_QNAME, Object.class, null, value);
    }

}
